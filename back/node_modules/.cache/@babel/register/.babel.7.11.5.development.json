{
  "{\"sourceRoot\":\"/mnt/c/Users/Rachid/Desktop/cross-pwgame/back/src/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/mnt/c/Users/Rachid/Desktop/cross-pwgame/back\",\"filename\":\"/mnt/c/Users/Rachid/Desktop/cross-pwgame/back/src/server.ts\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/mnt/c/Users/Rachid/Desktop/cross-pwgame/back\",\"plugins\":[{\"key\":\"transform-typescript\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Identifier\":{\"enter\":[null]},\"RestElement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"ExportSpecifier\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"TSDeclareFunction\":{\"enter\":[null]},\"TSDeclareMethod\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"VariableDeclarator\":{\"enter\":[null]},\"TSIndexSignature\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null,null]},\"TSModuleDeclaration\":{\"enter\":[null]},\"TSInterfaceDeclaration\":{\"enter\":[null]},\"TSTypeAliasDeclaration\":{\"enter\":[null]},\"TSEnumDeclaration\":{\"enter\":[null]},\"TSImportEqualsDeclaration\":{\"enter\":[null]},\"TSExportAssignment\":{\"enter\":[null]},\"TSTypeAssertion\":{\"enter\":[null]},\"TSAsExpression\":{\"enter\":[null]},\"TSNonNullExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"OptionalCallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"JSXOpeningElement\":{\"enter\":[null]},\"TaggedTemplateExpression\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"isTSX\":false}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.11.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "/mnt/c/Users/Rachid/Desktop/cross-pwgame/back/src/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/mnt/c/Users/Rachid/Desktop/cross-pwgame/back",
      "filename": "/mnt/c/Users/Rachid/Desktop/cross-pwgame/back/src/server.ts",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/mnt/c/Users/Rachid/Desktop/cross-pwgame/back",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-typescript",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Identifier": {
              "enter": [
                null
              ]
            },
            "RestElement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "ExportSpecifier": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "TSDeclareFunction": {
              "enter": [
                null
              ]
            },
            "TSDeclareMethod": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "TSIndexSignature": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null,
                null
              ]
            },
            "TSModuleDeclaration": {
              "enter": [
                null
              ]
            },
            "TSInterfaceDeclaration": {
              "enter": [
                null
              ]
            },
            "TSTypeAliasDeclaration": {
              "enter": [
                null
              ]
            },
            "TSEnumDeclaration": {
              "enter": [
                null
              ]
            },
            "TSImportEqualsDeclaration": {
              "enter": [
                null
              ]
            },
            "TSExportAssignment": {
              "enter": [
                null
              ]
            },
            "TSTypeAssertion": {
              "enter": [
                null
              ]
            },
            "TSAsExpression": {
              "enter": [
                null
              ]
            },
            "TSNonNullExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "JSXOpeningElement": {
              "enter": [
                null
              ]
            },
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "isTSX": false
          }
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/mnt/c/Users/Rachid/Desktop/cross-pwgame/back/src/server.ts",
        "plugins": [
          "typescript",
          "classProperties",
          "objectRestSpread",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/mnt/c/Users/Rachid/Desktop/cross-pwgame/back/src/server.ts",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/mnt/c/Users/Rachid/Desktop/cross-pwgame/back/src/",
        "sourceFileName": "server.ts"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _dotenv = _interopRequireDefault(require(\"dotenv\"));\n\nvar _chalk = _interopRequireDefault(require(\"chalk\"));\n\nvar _socket = _interopRequireDefault(require(\"socket.io\"));\n\nvar _utils = require(\"./helpers/utils\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n// prelude -- loading environment variable\n_dotenv[\"default\"].config();\n\nif ((0, _utils.isNull)(process.env.PORT)) {\n  throw 'Sorry missing PORT env';\n}\n\nvar port = parseInt(process.env.PORT);\nvar app = (0, _express[\"default\"])();\nvar server = app.listen(port, function () {\n  (0, _utils.display)(_chalk[\"default\"].magenta(\"crossPWAGame server is running on 0.0.0.0:\".concat(port)));\n});\nvar socketio = (0, _socket[\"default\"])(server);\nvar users = {};\nvar i = 0;\nvar countParticipant = 0;\nsocketio.on('connection', function (socket) {\n  socket.join(\"room_\".concat(i));\n  (0, _utils.display)(_chalk[\"default\"].cyan(\"Connection opened for ( \".concat(socket.id, \" )\")));\n  socket.on('disconnect', function () {\n    var _users$socket$id;\n\n    if ((_users$socket$id = users[socket.id]) === null || _users$socket$id === void 0 ? void 0 : _users$socket$id.nickname) {\n      var nickname = users[socket.id].nickname;\n      (0, _utils.display)(_chalk[\"default\"].yellow(\"Goodbye \".concat(nickname)));\n    }\n\n    (0, _utils.display)(_chalk[\"default\"].cyan(\"Connection closed for ( \".concat(socket.id, \" )\")));\n  });\n  socket.on('game::sendNickname', function (payload) {\n    var user = JSON.parse(payload);\n    var nickname = user.nickname;\n    (0, _utils.display)(_chalk[\"default\"].yellow(\"Here comes a new challenger : \".concat(nickname, \" ( from \").concat(socket.id, \" )\")));\n    users[socket.id] = {\n      nickname: nickname\n    };\n    socket.emit('game::start', {\n      points: 1337\n    });\n  });\n  socket.on('room::join', function (payload) {\n    if (countParticipant === 2) {\n      i++;\n      countParticipant = 0;\n    } else {\n      countParticipant++;\n    }\n\n    socket.emit('room::id', {\n      id: i,\n      participantNumber: countParticipant\n    });\n  });\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNlcnZlci50cyJdLCJuYW1lcyI6WyJkb3RlbnYiLCJjb25maWciLCJwcm9jZXNzIiwiZW52IiwiUE9SVCIsInBvcnQiLCJwYXJzZUludCIsImFwcCIsInNlcnZlciIsImxpc3RlbiIsImNoYWxrIiwibWFnZW50YSIsInNvY2tldGlvIiwidXNlcnMiLCJpIiwiY291bnRQYXJ0aWNpcGFudCIsIm9uIiwic29ja2V0Iiwiam9pbiIsImN5YW4iLCJpZCIsIm5pY2tuYW1lIiwieWVsbG93IiwicGF5bG9hZCIsInVzZXIiLCJKU09OIiwicGFyc2UiLCJlbWl0IiwicG9pbnRzIiwicGFydGljaXBhbnROdW1iZXIiXSwibWFwcGluZ3MiOiI7O0FBQUE7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBRUE7Ozs7QUFNQTtBQUNBQSxtQkFBT0MsTUFBUDs7QUFDQSxJQUFJLG1CQUFPQyxPQUFPLENBQUNDLEdBQVIsQ0FBWUMsSUFBbkIsQ0FBSixFQUE4QjtBQUM1QixRQUFNLHdCQUFOO0FBQ0Q7O0FBRUQsSUFBTUMsSUFBSSxHQUFHQyxRQUFRLENBQUNKLE9BQU8sQ0FBQ0MsR0FBUixDQUFZQyxJQUFiLENBQXJCO0FBQ0EsSUFBTUcsR0FBRyxHQUFHLDBCQUFaO0FBRUEsSUFBTUMsTUFBTSxHQUFHRCxHQUFHLENBQUNFLE1BQUosQ0FBV0osSUFBWCxFQUFpQixZQUFNO0FBQ3BDLHNCQUFRSyxrQkFBTUMsT0FBTixxREFBMkROLElBQTNELEVBQVI7QUFDRCxDQUZjLENBQWY7QUFJQSxJQUFNTyxRQUFRLEdBQUcsd0JBQUdKLE1BQUgsQ0FBakI7QUFFQSxJQUFNSyxLQUEyQixHQUFHLEVBQXBDO0FBQ0EsSUFBSUMsQ0FBUyxHQUFHLENBQWhCO0FBQ0EsSUFBSUMsZ0JBQXdCLEdBQUcsQ0FBL0I7QUFDQUgsUUFBUSxDQUFDSSxFQUFULENBQVksWUFBWixFQUEwQixVQUFDQyxNQUFELEVBQW9CO0FBQzVDQSxFQUFBQSxNQUFNLENBQUNDLElBQVAsZ0JBQW9CSixDQUFwQjtBQUVBLHNCQUFRSixrQkFBTVMsSUFBTixtQ0FBc0NGLE1BQU0sQ0FBQ0csRUFBN0MsUUFBUjtBQUNBSCxFQUFBQSxNQUFNLENBQUNELEVBQVAsQ0FBVSxZQUFWLEVBQXdCLFlBQU07QUFBQTs7QUFDNUIsNEJBQUlILEtBQUssQ0FBQ0ksTUFBTSxDQUFDRyxFQUFSLENBQVQscURBQUksaUJBQWtCQyxRQUF0QixFQUFnQztBQUFBLFVBQ3RCQSxRQURzQixHQUNUUixLQUFLLENBQUNJLE1BQU0sQ0FBQ0csRUFBUixDQURJLENBQ3RCQyxRQURzQjtBQUU5QiwwQkFBUVgsa0JBQU1ZLE1BQU4sbUJBQXdCRCxRQUF4QixFQUFSO0FBQ0Q7O0FBQ0Qsd0JBQVFYLGtCQUFNUyxJQUFOLG1DQUFzQ0YsTUFBTSxDQUFDRyxFQUE3QyxRQUFSO0FBQ0QsR0FORDtBQVFBSCxFQUFBQSxNQUFNLENBQUNELEVBQVAsQ0FBVSxvQkFBVixFQUFnQyxVQUFBTyxPQUFPLEVBQUk7QUFDekMsUUFBTUMsSUFBSSxHQUFHQyxJQUFJLENBQUNDLEtBQUwsQ0FBV0gsT0FBWCxDQUFiO0FBRHlDLFFBRWpDRixRQUZpQyxHQUVwQkcsSUFGb0IsQ0FFakNILFFBRmlDO0FBR3pDLHdCQUFRWCxrQkFBTVksTUFBTix5Q0FBOENELFFBQTlDLHFCQUFpRUosTUFBTSxDQUFDRyxFQUF4RSxRQUFSO0FBRUFQLElBQUFBLEtBQUssQ0FBQ0ksTUFBTSxDQUFDRyxFQUFSLENBQUwsR0FBbUI7QUFBRUMsTUFBQUEsUUFBUSxFQUFSQTtBQUFGLEtBQW5CO0FBRUFKLElBQUFBLE1BQU0sQ0FBQ1UsSUFBUCxDQUFZLGFBQVosRUFBMkI7QUFDekJDLE1BQUFBLE1BQU0sRUFBRTtBQURpQixLQUEzQjtBQUdELEdBVkQ7QUFZQVgsRUFBQUEsTUFBTSxDQUFDRCxFQUFQLENBQVUsWUFBVixFQUF3QixVQUFBTyxPQUFPLEVBQUk7QUFDakMsUUFBSVIsZ0JBQWdCLEtBQUssQ0FBekIsRUFBNEI7QUFDMUJELE1BQUFBLENBQUM7QUFDREMsTUFBQUEsZ0JBQWdCLEdBQUcsQ0FBbkI7QUFDRCxLQUhELE1BR087QUFDTEEsTUFBQUEsZ0JBQWdCO0FBQ2pCOztBQUNERSxJQUFBQSxNQUFNLENBQUNVLElBQVAsQ0FBWSxVQUFaLEVBQXdCO0FBQ3RCUCxNQUFBQSxFQUFFLEVBQUVOLENBRGtCO0FBRXRCZSxNQUFBQSxpQkFBaUIsRUFBRWQ7QUFGRyxLQUF4QjtBQUlELEdBWEQ7QUFjRCxDQXRDRCIsInNvdXJjZVJvb3QiOiIvbW50L2MvVXNlcnMvUmFjaGlkL0Rlc2t0b3AvY3Jvc3MtcHdnYW1lL2JhY2svc3JjLyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBleHByZXNzIGZyb20gJ2V4cHJlc3MnXG5pbXBvcnQgZG90ZW52IGZyb20gJ2RvdGVudidcbmltcG9ydCBjaGFsayBmcm9tICdjaGFsaydcbmltcG9ydCBpbywgeyBTb2NrZXQgfSBmcm9tICdzb2NrZXQuaW8nXG5cbmltcG9ydCB7IGlzTnVsbCwgZGlzcGxheSB9IGZyb20gJy4vaGVscGVycy91dGlscydcblxuaW50ZXJmYWNlIFVzZXIge1xuICBuaWNrbmFtZT86IHN0cmluZ1xufVxuXG4vLyBwcmVsdWRlIC0tIGxvYWRpbmcgZW52aXJvbm1lbnQgdmFyaWFibGVcbmRvdGVudi5jb25maWcoKVxuaWYgKGlzTnVsbChwcm9jZXNzLmVudi5QT1JUKSkge1xuICB0aHJvdyAnU29ycnkgbWlzc2luZyBQT1JUIGVudidcbn1cblxuY29uc3QgcG9ydCA9IHBhcnNlSW50KHByb2Nlc3MuZW52LlBPUlQpXG5jb25zdCBhcHAgPSBleHByZXNzKClcblxuY29uc3Qgc2VydmVyID0gYXBwLmxpc3Rlbihwb3J0LCAoKSA9PiB7XG4gIGRpc3BsYXkoY2hhbGsubWFnZW50YShgY3Jvc3NQV0FHYW1lIHNlcnZlciBpcyBydW5uaW5nIG9uIDAuMC4wLjA6JHtwb3J0fWApKVxufSlcblxuY29uc3Qgc29ja2V0aW8gPSBpbyhzZXJ2ZXIpXG5cbmNvbnN0IHVzZXJzOiBSZWNvcmQ8c3RyaW5nLCBVc2VyPiA9IHt9XG5sZXQgaTogbnVtYmVyID0gMDtcbmxldCBjb3VudFBhcnRpY2lwYW50OiBudW1iZXIgPSAwO1xuc29ja2V0aW8ub24oJ2Nvbm5lY3Rpb24nLCAoc29ja2V0OiBTb2NrZXQpID0+IHtcbiAgc29ja2V0LmpvaW4oYHJvb21fJHtpfWApO1xuXG4gIGRpc3BsYXkoY2hhbGsuY3lhbihgQ29ubmVjdGlvbiBvcGVuZWQgZm9yICggJHtzb2NrZXQuaWR9IClgKSlcbiAgc29ja2V0Lm9uKCdkaXNjb25uZWN0JywgKCkgPT4ge1xuICAgIGlmICh1c2Vyc1tzb2NrZXQuaWRdPy5uaWNrbmFtZSkge1xuICAgICAgY29uc3QgeyBuaWNrbmFtZSB9ID0gdXNlcnNbc29ja2V0LmlkXVxuICAgICAgZGlzcGxheShjaGFsay55ZWxsb3coYEdvb2RieWUgJHtuaWNrbmFtZX1gKSlcbiAgICB9XG4gICAgZGlzcGxheShjaGFsay5jeWFuKGBDb25uZWN0aW9uIGNsb3NlZCBmb3IgKCAke3NvY2tldC5pZH0gKWApKVxuICB9KVxuXG4gIHNvY2tldC5vbignZ2FtZTo6c2VuZE5pY2tuYW1lJywgcGF5bG9hZCA9PiB7XG4gICAgY29uc3QgdXNlciA9IEpTT04ucGFyc2UocGF5bG9hZClcbiAgICBjb25zdCB7IG5pY2tuYW1lIH0gPSB1c2VyXG4gICAgZGlzcGxheShjaGFsay55ZWxsb3coYEhlcmUgY29tZXMgYSBuZXcgY2hhbGxlbmdlciA6ICR7bmlja25hbWV9ICggZnJvbSAke3NvY2tldC5pZH0gKWApKVxuXG4gICAgdXNlcnNbc29ja2V0LmlkXSA9IHsgbmlja25hbWUgfVxuXG4gICAgc29ja2V0LmVtaXQoJ2dhbWU6OnN0YXJ0Jywge1xuICAgICAgcG9pbnRzOiAxMzM3LFxuICAgIH0pXG4gIH0pXG5cbiAgc29ja2V0Lm9uKCdyb29tOjpqb2luJywgcGF5bG9hZCA9PiB7XG4gICAgaWYgKGNvdW50UGFydGljaXBhbnQgPT09IDIpIHtcbiAgICAgIGkrKztcbiAgICAgIGNvdW50UGFydGljaXBhbnQgPSAwO1xuICAgIH0gZWxzZSB7XG4gICAgICBjb3VudFBhcnRpY2lwYW50Kys7XG4gICAgfVxuICAgIHNvY2tldC5lbWl0KCdyb29tOjppZCcsIHtcbiAgICAgIGlkOiBpLFxuICAgICAgcGFydGljaXBhbnROdW1iZXI6IGNvdW50UGFydGljaXBhbnRcbiAgICB9KVxuICB9KVxuXG5cbn0pXG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "server.ts"
      ],
      "names": [
        "dotenv",
        "config",
        "process",
        "env",
        "PORT",
        "port",
        "parseInt",
        "app",
        "server",
        "listen",
        "chalk",
        "magenta",
        "socketio",
        "users",
        "i",
        "countParticipant",
        "on",
        "socket",
        "join",
        "cyan",
        "id",
        "nickname",
        "yellow",
        "payload",
        "user",
        "JSON",
        "parse",
        "emit",
        "points",
        "participantNumber"
      ],
      "mappings": ";;AAAA;;AACA;;AACA;;AACA;;AAEA;;;;AAMA;AACAA,mBAAOC,MAAP;;AACA,IAAI,mBAAOC,OAAO,CAACC,GAAR,CAAYC,IAAnB,CAAJ,EAA8B;AAC5B,QAAM,wBAAN;AACD;;AAED,IAAMC,IAAI,GAAGC,QAAQ,CAACJ,OAAO,CAACC,GAAR,CAAYC,IAAb,CAArB;AACA,IAAMG,GAAG,GAAG,0BAAZ;AAEA,IAAMC,MAAM,GAAGD,GAAG,CAACE,MAAJ,CAAWJ,IAAX,EAAiB,YAAM;AACpC,sBAAQK,kBAAMC,OAAN,qDAA2DN,IAA3D,EAAR;AACD,CAFc,CAAf;AAIA,IAAMO,QAAQ,GAAG,wBAAGJ,MAAH,CAAjB;AAEA,IAAMK,KAA2B,GAAG,EAApC;AACA,IAAIC,CAAS,GAAG,CAAhB;AACA,IAAIC,gBAAwB,GAAG,CAA/B;AACAH,QAAQ,CAACI,EAAT,CAAY,YAAZ,EAA0B,UAACC,MAAD,EAAoB;AAC5CA,EAAAA,MAAM,CAACC,IAAP,gBAAoBJ,CAApB;AAEA,sBAAQJ,kBAAMS,IAAN,mCAAsCF,MAAM,CAACG,EAA7C,QAAR;AACAH,EAAAA,MAAM,CAACD,EAAP,CAAU,YAAV,EAAwB,YAAM;AAAA;;AAC5B,4BAAIH,KAAK,CAACI,MAAM,CAACG,EAAR,CAAT,qDAAI,iBAAkBC,QAAtB,EAAgC;AAAA,UACtBA,QADsB,GACTR,KAAK,CAACI,MAAM,CAACG,EAAR,CADI,CACtBC,QADsB;AAE9B,0BAAQX,kBAAMY,MAAN,mBAAwBD,QAAxB,EAAR;AACD;;AACD,wBAAQX,kBAAMS,IAAN,mCAAsCF,MAAM,CAACG,EAA7C,QAAR;AACD,GAND;AAQAH,EAAAA,MAAM,CAACD,EAAP,CAAU,oBAAV,EAAgC,UAAAO,OAAO,EAAI;AACzC,QAAMC,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWH,OAAX,CAAb;AADyC,QAEjCF,QAFiC,GAEpBG,IAFoB,CAEjCH,QAFiC;AAGzC,wBAAQX,kBAAMY,MAAN,yCAA8CD,QAA9C,qBAAiEJ,MAAM,CAACG,EAAxE,QAAR;AAEAP,IAAAA,KAAK,CAACI,MAAM,CAACG,EAAR,CAAL,GAAmB;AAAEC,MAAAA,QAAQ,EAARA;AAAF,KAAnB;AAEAJ,IAAAA,MAAM,CAACU,IAAP,CAAY,aAAZ,EAA2B;AACzBC,MAAAA,MAAM,EAAE;AADiB,KAA3B;AAGD,GAVD;AAYAX,EAAAA,MAAM,CAACD,EAAP,CAAU,YAAV,EAAwB,UAAAO,OAAO,EAAI;AACjC,QAAIR,gBAAgB,KAAK,CAAzB,EAA4B;AAC1BD,MAAAA,CAAC;AACDC,MAAAA,gBAAgB,GAAG,CAAnB;AACD,KAHD,MAGO;AACLA,MAAAA,gBAAgB;AACjB;;AACDE,IAAAA,MAAM,CAACU,IAAP,CAAY,UAAZ,EAAwB;AACtBP,MAAAA,EAAE,EAAEN,CADkB;AAEtBe,MAAAA,iBAAiB,EAAEd;AAFG,KAAxB;AAID,GAXD;AAcD,CAtCD",
      "sourceRoot": "/mnt/c/Users/Rachid/Desktop/cross-pwgame/back/src/",
      "sourcesContent": [
        "import express from 'express'\nimport dotenv from 'dotenv'\nimport chalk from 'chalk'\nimport io, { Socket } from 'socket.io'\n\nimport { isNull, display } from './helpers/utils'\n\ninterface User {\n  nickname?: string\n}\n\n// prelude -- loading environment variable\ndotenv.config()\nif (isNull(process.env.PORT)) {\n  throw 'Sorry missing PORT env'\n}\n\nconst port = parseInt(process.env.PORT)\nconst app = express()\n\nconst server = app.listen(port, () => {\n  display(chalk.magenta(`crossPWAGame server is running on 0.0.0.0:${port}`))\n})\n\nconst socketio = io(server)\n\nconst users: Record<string, User> = {}\nlet i: number = 0;\nlet countParticipant: number = 0;\nsocketio.on('connection', (socket: Socket) => {\n  socket.join(`room_${i}`);\n\n  display(chalk.cyan(`Connection opened for ( ${socket.id} )`))\n  socket.on('disconnect', () => {\n    if (users[socket.id]?.nickname) {\n      const { nickname } = users[socket.id]\n      display(chalk.yellow(`Goodbye ${nickname}`))\n    }\n    display(chalk.cyan(`Connection closed for ( ${socket.id} )`))\n  })\n\n  socket.on('game::sendNickname', payload => {\n    const user = JSON.parse(payload)\n    const { nickname } = user\n    display(chalk.yellow(`Here comes a new challenger : ${nickname} ( from ${socket.id} )`))\n\n    users[socket.id] = { nickname }\n\n    socket.emit('game::start', {\n      points: 1337,\n    })\n  })\n\n  socket.on('room::join', payload => {\n    if (countParticipant === 2) {\n      i++;\n      countParticipant = 0;\n    } else {\n      countParticipant++;\n    }\n    socket.emit('room::id', {\n      id: i,\n      participantNumber: countParticipant\n    })\n  })\n\n\n})\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1599214071959
  },
  "{\"sourceRoot\":\"/mnt/c/Users/Rachid/Desktop/cross-pwgame/back/src/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/mnt/c/Users/Rachid/Desktop/cross-pwgame/back\",\"filename\":\"/mnt/c/Users/Rachid/Desktop/cross-pwgame/back/src/utils.ts\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/mnt/c/Users/Rachid/Desktop/cross-pwgame/back\",\"plugins\":[{\"key\":\"transform-typescript\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Identifier\":{\"enter\":[null]},\"RestElement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"ExportSpecifier\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"TSDeclareFunction\":{\"enter\":[null]},\"TSDeclareMethod\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"VariableDeclarator\":{\"enter\":[null]},\"TSIndexSignature\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null,null]},\"TSModuleDeclaration\":{\"enter\":[null]},\"TSInterfaceDeclaration\":{\"enter\":[null]},\"TSTypeAliasDeclaration\":{\"enter\":[null]},\"TSEnumDeclaration\":{\"enter\":[null]},\"TSImportEqualsDeclaration\":{\"enter\":[null]},\"TSExportAssignment\":{\"enter\":[null]},\"TSTypeAssertion\":{\"enter\":[null]},\"TSAsExpression\":{\"enter\":[null]},\"TSNonNullExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"OptionalCallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"JSXOpeningElement\":{\"enter\":[null]},\"TaggedTemplateExpression\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"isTSX\":false}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.11.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "/mnt/c/Users/Rachid/Desktop/cross-pwgame/back/src/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/mnt/c/Users/Rachid/Desktop/cross-pwgame/back",
      "filename": "/mnt/c/Users/Rachid/Desktop/cross-pwgame/back/src/utils.ts",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/mnt/c/Users/Rachid/Desktop/cross-pwgame/back",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-typescript",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Identifier": {
              "enter": [
                null
              ]
            },
            "RestElement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "ExportSpecifier": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "TSDeclareFunction": {
              "enter": [
                null
              ]
            },
            "TSDeclareMethod": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "TSIndexSignature": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null,
                null
              ]
            },
            "TSModuleDeclaration": {
              "enter": [
                null
              ]
            },
            "TSInterfaceDeclaration": {
              "enter": [
                null
              ]
            },
            "TSTypeAliasDeclaration": {
              "enter": [
                null
              ]
            },
            "TSEnumDeclaration": {
              "enter": [
                null
              ]
            },
            "TSImportEqualsDeclaration": {
              "enter": [
                null
              ]
            },
            "TSExportAssignment": {
              "enter": [
                null
              ]
            },
            "TSTypeAssertion": {
              "enter": [
                null
              ]
            },
            "TSAsExpression": {
              "enter": [
                null
              ]
            },
            "TSNonNullExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "JSXOpeningElement": {
              "enter": [
                null
              ]
            },
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "isTSX": false
          }
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/mnt/c/Users/Rachid/Desktop/cross-pwgame/back/src/utils.ts",
        "plugins": [
          "typescript",
          "classProperties",
          "objectRestSpread",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/mnt/c/Users/Rachid/Desktop/cross-pwgame/back/src/utils.ts",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/mnt/c/Users/Rachid/Desktop/cross-pwgame/back/src/",
        "sourceFileName": "utils.ts"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.display = exports.isNull = exports.isNotNull = void 0;\n\nvar _moment = _interopRequireDefault(require(\"moment\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n/**\n * @function isNotNull\n * @description check if all args are not null\n *\n * @param {unknown[]} values - any arguments to checks\n * @return {boolean}\n *\n * @example\n * isNotNull(x, y, z, process.env.PORT)\n *\n */\nvar isNotNull = function isNotNull() {\n  for (var _len = arguments.length, values = new Array(_len), _key = 0; _key < _len; _key++) {\n    values[_key] = arguments[_key];\n  }\n\n  for (var _i = 0, _values = values; _i < _values.length; _i++) {\n    var v = _values[_i];\n\n    if (v === undefined || v === null) {\n      return false;\n    }\n  }\n\n  return true;\n};\n/**\n * @function isNull\n * @description check if all args are null\n *\n * @param {unknown[]} values - any arguments to checks\n * @return {boolean}\n *\n * @example\n * isNull(x, y, z, process.env.PORT)\n *\n */\n\n\nexports.isNotNull = isNotNull;\n\nvar isNull = function isNull() {\n  return !isNotNull.apply(void 0, arguments);\n};\n/**\n * @function display\n * @description display on output with time\n *\n * @param {string} str - data to display\n * @return {void}\n *\n * @example\n * display(\"Il a pas dit bonjour\")\n *\n */\n\n\nexports.isNull = isNull;\n\nvar display = function display(str) {\n  return console.log(\"[\".concat((0, _moment[\"default\"])(), \"] \").concat(str));\n};\n\nexports.display = display;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInV0aWxzLnRzIl0sIm5hbWVzIjpbImlzTm90TnVsbCIsInZhbHVlcyIsInYiLCJ1bmRlZmluZWQiLCJpc051bGwiLCJkaXNwbGF5Iiwic3RyIiwiY29uc29sZSIsImxvZyJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOzs7O0FBRUE7Ozs7Ozs7Ozs7O0FBV08sSUFBTUEsU0FBUyxHQUFHLFNBQVpBLFNBQVksR0FBbUM7QUFBQSxvQ0FBL0JDLE1BQStCO0FBQS9CQSxJQUFBQSxNQUErQjtBQUFBOztBQUMxRCw2QkFBZ0JBLE1BQWhCLDZCQUF3QjtBQUFuQixRQUFNQyxDQUFDLGNBQVA7O0FBQ0gsUUFBSUEsQ0FBQyxLQUFLQyxTQUFOLElBQW1CRCxDQUFDLEtBQUssSUFBN0IsRUFBbUM7QUFDakMsYUFBTyxLQUFQO0FBQ0Q7QUFDRjs7QUFDRCxTQUFPLElBQVA7QUFDRCxDQVBNO0FBU1A7Ozs7Ozs7Ozs7Ozs7OztBQVdPLElBQU1FLE1BQU0sR0FBRyxTQUFUQSxNQUFTO0FBQUEsU0FBbUMsQ0FBQ0osU0FBUyxNQUFULG1CQUFwQztBQUFBLENBQWY7QUFFUDs7Ozs7Ozs7Ozs7Ozs7O0FBV08sSUFBTUssT0FBTyxHQUFHLFNBQVZBLE9BQVUsQ0FBQ0MsR0FBRDtBQUFBLFNBQXVCQyxPQUFPLENBQUNDLEdBQVIsWUFBZ0IseUJBQWhCLGVBQTZCRixHQUE3QixFQUF2QjtBQUFBLENBQWhCIiwic291cmNlUm9vdCI6Ii9tbnQvYy9Vc2Vycy9SYWNoaWQvRGVza3RvcC9jcm9zcy1wd2dhbWUvYmFjay9zcmMvIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IG1vbWVudCBmcm9tICdtb21lbnQnXG5cbi8qKlxuICogQGZ1bmN0aW9uIGlzTm90TnVsbFxuICogQGRlc2NyaXB0aW9uIGNoZWNrIGlmIGFsbCBhcmdzIGFyZSBub3QgbnVsbFxuICpcbiAqIEBwYXJhbSB7dW5rbm93bltdfSB2YWx1ZXMgLSBhbnkgYXJndW1lbnRzIHRvIGNoZWNrc1xuICogQHJldHVybiB7Ym9vbGVhbn1cbiAqXG4gKiBAZXhhbXBsZVxuICogaXNOb3ROdWxsKHgsIHksIHosIHByb2Nlc3MuZW52LlBPUlQpXG4gKlxuICovXG5leHBvcnQgY29uc3QgaXNOb3ROdWxsID0gKC4uLnZhbHVlczogdW5rbm93bltdKTogYm9vbGVhbiA9PiB7XG4gIGZvciAoY29uc3QgdiBvZiB2YWx1ZXMpIHtcbiAgICBpZiAodiA9PT0gdW5kZWZpbmVkIHx8IHYgPT09IG51bGwpIHtcbiAgICAgIHJldHVybiBmYWxzZVxuICAgIH1cbiAgfVxuICByZXR1cm4gdHJ1ZVxufVxuXG4vKipcbiAqIEBmdW5jdGlvbiBpc051bGxcbiAqIEBkZXNjcmlwdGlvbiBjaGVjayBpZiBhbGwgYXJncyBhcmUgbnVsbFxuICpcbiAqIEBwYXJhbSB7dW5rbm93bltdfSB2YWx1ZXMgLSBhbnkgYXJndW1lbnRzIHRvIGNoZWNrc1xuICogQHJldHVybiB7Ym9vbGVhbn1cbiAqXG4gKiBAZXhhbXBsZVxuICogaXNOdWxsKHgsIHksIHosIHByb2Nlc3MuZW52LlBPUlQpXG4gKlxuICovXG5leHBvcnQgY29uc3QgaXNOdWxsID0gKC4uLnZhbHVlczogdW5rbm93bltdKTogYm9vbGVhbiA9PiAhaXNOb3ROdWxsKC4uLnZhbHVlcylcblxuLyoqXG4gKiBAZnVuY3Rpb24gZGlzcGxheVxuICogQGRlc2NyaXB0aW9uIGRpc3BsYXkgb24gb3V0cHV0IHdpdGggdGltZVxuICpcbiAqIEBwYXJhbSB7c3RyaW5nfSBzdHIgLSBkYXRhIHRvIGRpc3BsYXlcbiAqIEByZXR1cm4ge3ZvaWR9XG4gKlxuICogQGV4YW1wbGVcbiAqIGRpc3BsYXkoXCJJbCBhIHBhcyBkaXQgYm9uam91clwiKVxuICpcbiAqL1xuZXhwb3J0IGNvbnN0IGRpc3BsYXkgPSAoc3RyOiBzdHJpbmcpOiB2b2lkID0+IGNvbnNvbGUubG9nKGBbJHttb21lbnQoKX1dICR7c3RyfWApXG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "utils.ts"
      ],
      "names": [
        "isNotNull",
        "values",
        "v",
        "undefined",
        "isNull",
        "display",
        "str",
        "console",
        "log"
      ],
      "mappings": ";;;;;;;AAAA;;;;AAEA;;;;;;;;;;;AAWO,IAAMA,SAAS,GAAG,SAAZA,SAAY,GAAmC;AAAA,oCAA/BC,MAA+B;AAA/BA,IAAAA,MAA+B;AAAA;;AAC1D,6BAAgBA,MAAhB,6BAAwB;AAAnB,QAAMC,CAAC,cAAP;;AACH,QAAIA,CAAC,KAAKC,SAAN,IAAmBD,CAAC,KAAK,IAA7B,EAAmC;AACjC,aAAO,KAAP;AACD;AACF;;AACD,SAAO,IAAP;AACD,CAPM;AASP;;;;;;;;;;;;;;;AAWO,IAAME,MAAM,GAAG,SAATA,MAAS;AAAA,SAAmC,CAACJ,SAAS,MAAT,mBAApC;AAAA,CAAf;AAEP;;;;;;;;;;;;;;;AAWO,IAAMK,OAAO,GAAG,SAAVA,OAAU,CAACC,GAAD;AAAA,SAAuBC,OAAO,CAACC,GAAR,YAAgB,yBAAhB,eAA6BF,GAA7B,EAAvB;AAAA,CAAhB",
      "sourceRoot": "/mnt/c/Users/Rachid/Desktop/cross-pwgame/back/src/",
      "sourcesContent": [
        "import moment from 'moment'\n\n/**\n * @function isNotNull\n * @description check if all args are not null\n *\n * @param {unknown[]} values - any arguments to checks\n * @return {boolean}\n *\n * @example\n * isNotNull(x, y, z, process.env.PORT)\n *\n */\nexport const isNotNull = (...values: unknown[]): boolean => {\n  for (const v of values) {\n    if (v === undefined || v === null) {\n      return false\n    }\n  }\n  return true\n}\n\n/**\n * @function isNull\n * @description check if all args are null\n *\n * @param {unknown[]} values - any arguments to checks\n * @return {boolean}\n *\n * @example\n * isNull(x, y, z, process.env.PORT)\n *\n */\nexport const isNull = (...values: unknown[]): boolean => !isNotNull(...values)\n\n/**\n * @function display\n * @description display on output with time\n *\n * @param {string} str - data to display\n * @return {void}\n *\n * @example\n * display(\"Il a pas dit bonjour\")\n *\n */\nexport const display = (str: string): void => console.log(`[${moment()}] ${str}`)\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1599202608200
  },
  "{\"sourceRoot\":\"/mnt/c/Users/Rachid/Desktop/cross-pwgame/back/src/helpers/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/mnt/c/Users/Rachid/Desktop/cross-pwgame/back\",\"filename\":\"/mnt/c/Users/Rachid/Desktop/cross-pwgame/back/src/helpers/utils.ts\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/mnt/c/Users/Rachid/Desktop/cross-pwgame/back\",\"plugins\":[{\"key\":\"transform-typescript\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Identifier\":{\"enter\":[null]},\"RestElement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"ExportSpecifier\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"TSDeclareFunction\":{\"enter\":[null]},\"TSDeclareMethod\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"VariableDeclarator\":{\"enter\":[null]},\"TSIndexSignature\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null,null]},\"TSModuleDeclaration\":{\"enter\":[null]},\"TSInterfaceDeclaration\":{\"enter\":[null]},\"TSTypeAliasDeclaration\":{\"enter\":[null]},\"TSEnumDeclaration\":{\"enter\":[null]},\"TSImportEqualsDeclaration\":{\"enter\":[null]},\"TSExportAssignment\":{\"enter\":[null]},\"TSTypeAssertion\":{\"enter\":[null]},\"TSAsExpression\":{\"enter\":[null]},\"TSNonNullExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"OptionalCallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"JSXOpeningElement\":{\"enter\":[null]},\"TaggedTemplateExpression\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"isTSX\":false}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.11.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "/mnt/c/Users/Rachid/Desktop/cross-pwgame/back/src/helpers/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/mnt/c/Users/Rachid/Desktop/cross-pwgame/back",
      "filename": "/mnt/c/Users/Rachid/Desktop/cross-pwgame/back/src/helpers/utils.ts",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/mnt/c/Users/Rachid/Desktop/cross-pwgame/back",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-typescript",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Identifier": {
              "enter": [
                null
              ]
            },
            "RestElement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "ExportSpecifier": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "TSDeclareFunction": {
              "enter": [
                null
              ]
            },
            "TSDeclareMethod": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "TSIndexSignature": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null,
                null
              ]
            },
            "TSModuleDeclaration": {
              "enter": [
                null
              ]
            },
            "TSInterfaceDeclaration": {
              "enter": [
                null
              ]
            },
            "TSTypeAliasDeclaration": {
              "enter": [
                null
              ]
            },
            "TSEnumDeclaration": {
              "enter": [
                null
              ]
            },
            "TSImportEqualsDeclaration": {
              "enter": [
                null
              ]
            },
            "TSExportAssignment": {
              "enter": [
                null
              ]
            },
            "TSTypeAssertion": {
              "enter": [
                null
              ]
            },
            "TSAsExpression": {
              "enter": [
                null
              ]
            },
            "TSNonNullExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "JSXOpeningElement": {
              "enter": [
                null
              ]
            },
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "isTSX": false
          }
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/mnt/c/Users/Rachid/Desktop/cross-pwgame/back/src/helpers/utils.ts",
        "plugins": [
          "typescript",
          "classProperties",
          "objectRestSpread",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/mnt/c/Users/Rachid/Desktop/cross-pwgame/back/src/helpers/utils.ts",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/mnt/c/Users/Rachid/Desktop/cross-pwgame/back/src/helpers/",
        "sourceFileName": "utils.ts"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getEnv = exports.display = exports.isNull = exports.isNotNull = void 0;\n\nvar _moment = _interopRequireDefault(require(\"moment\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n/**\n * @function isNotNull\n * @description check if all args are not null\n *\n * @param {unknown[]} values - any arguments to checks\n * @return {boolean}\n *\n * @example\n * isNotNull(x, y, z, process.env.PORT)\n *\n */\nvar isNotNull = function isNotNull() {\n  for (var _len = arguments.length, values = new Array(_len), _key = 0; _key < _len; _key++) {\n    values[_key] = arguments[_key];\n  }\n\n  for (var _i = 0, _values = values; _i < _values.length; _i++) {\n    var v = _values[_i];\n\n    if (v === undefined || v === null) {\n      return false;\n    }\n  }\n\n  return true;\n};\n/**\n * @function isNull\n * @description check if all args are null\n *\n * @param {unknown[]} values - any arguments to checks\n * @return {boolean}\n *\n * @example\n * isNull(x, y, z, process.env.PORT)\n *\n */\n\n\nexports.isNotNull = isNotNull;\n\nvar isNull = function isNull() {\n  return !isNotNull.apply(void 0, arguments);\n};\n/**\n * @function display\n * @description display on output with time\n *\n * @param {string} str - data to display\n * @return {void}\n *\n * @example\n * display(\"Il a pas dit bonjour\")\n *\n */\n\n\nexports.isNull = isNull;\n\nvar display = function display(str) {\n  return console.log(\"[\".concat((0, _moment[\"default\"])(), \"] \").concat(str));\n};\n/**\n * @function getEnv\n * @description return env\n *\n * @param {string} values - any arguments to checks\n * @return {string}\n *\n * @example\n * getEnv(\"PORT\")\n *\n */\n\n\nexports.display = display;\n\nvar getEnv = function getEnv(key) {\n  if (process.env.hasOwnProperty(key)) return process.env[key];\n  return null;\n};\n\nexports.getEnv = getEnv;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInV0aWxzLnRzIl0sIm5hbWVzIjpbImlzTm90TnVsbCIsInZhbHVlcyIsInYiLCJ1bmRlZmluZWQiLCJpc051bGwiLCJkaXNwbGF5Iiwic3RyIiwiY29uc29sZSIsImxvZyIsImdldEVudiIsImtleSIsInByb2Nlc3MiLCJlbnYiLCJoYXNPd25Qcm9wZXJ0eSJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOzs7O0FBRUE7Ozs7Ozs7Ozs7O0FBV08sSUFBTUEsU0FBUyxHQUFHLFNBQVpBLFNBQVksR0FBbUM7QUFBQSxvQ0FBL0JDLE1BQStCO0FBQS9CQSxJQUFBQSxNQUErQjtBQUFBOztBQUMxRCw2QkFBZ0JBLE1BQWhCLDZCQUF3QjtBQUFuQixRQUFNQyxDQUFDLGNBQVA7O0FBQ0gsUUFBSUEsQ0FBQyxLQUFLQyxTQUFOLElBQW1CRCxDQUFDLEtBQUssSUFBN0IsRUFBbUM7QUFDakMsYUFBTyxLQUFQO0FBQ0Q7QUFDRjs7QUFDRCxTQUFPLElBQVA7QUFDRCxDQVBNO0FBU1A7Ozs7Ozs7Ozs7Ozs7OztBQVdPLElBQU1FLE1BQU0sR0FBRyxTQUFUQSxNQUFTO0FBQUEsU0FBbUMsQ0FBQ0osU0FBUyxNQUFULG1CQUFwQztBQUFBLENBQWY7QUFJUDs7Ozs7Ozs7Ozs7Ozs7O0FBV08sSUFBTUssT0FBTyxHQUFHLFNBQVZBLE9BQVUsQ0FBQ0MsR0FBRDtBQUFBLFNBQXVCQyxPQUFPLENBQUNDLEdBQVIsWUFBZ0IseUJBQWhCLGVBQTZCRixHQUE3QixFQUF2QjtBQUFBLENBQWhCO0FBR1A7Ozs7Ozs7Ozs7Ozs7OztBQVdPLElBQU1HLE1BQU0sR0FBRyxTQUFUQSxNQUFTLENBQUNDLEdBQUQsRUFBeUI7QUFDN0MsTUFBR0MsT0FBTyxDQUFDQyxHQUFSLENBQVlDLGNBQVosQ0FBMkJILEdBQTNCLENBQUgsRUFBb0MsT0FBT0MsT0FBTyxDQUFDQyxHQUFSLENBQVlGLEdBQVosQ0FBUDtBQUNwQyxTQUFPLElBQVA7QUFDRCxDQUhNIiwic291cmNlUm9vdCI6Ii9tbnQvYy9Vc2Vycy9SYWNoaWQvRGVza3RvcC9jcm9zcy1wd2dhbWUvYmFjay9zcmMvaGVscGVycy8iLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgbW9tZW50IGZyb20gJ21vbWVudCdcblxuLyoqXG4gKiBAZnVuY3Rpb24gaXNOb3ROdWxsXG4gKiBAZGVzY3JpcHRpb24gY2hlY2sgaWYgYWxsIGFyZ3MgYXJlIG5vdCBudWxsXG4gKlxuICogQHBhcmFtIHt1bmtub3duW119IHZhbHVlcyAtIGFueSBhcmd1bWVudHMgdG8gY2hlY2tzXG4gKiBAcmV0dXJuIHtib29sZWFufVxuICpcbiAqIEBleGFtcGxlXG4gKiBpc05vdE51bGwoeCwgeSwgeiwgcHJvY2Vzcy5lbnYuUE9SVClcbiAqXG4gKi9cbmV4cG9ydCBjb25zdCBpc05vdE51bGwgPSAoLi4udmFsdWVzOiB1bmtub3duW10pOiBib29sZWFuID0+IHtcbiAgZm9yIChjb25zdCB2IG9mIHZhbHVlcykge1xuICAgIGlmICh2ID09PSB1bmRlZmluZWQgfHwgdiA9PT0gbnVsbCkge1xuICAgICAgcmV0dXJuIGZhbHNlXG4gICAgfVxuICB9XG4gIHJldHVybiB0cnVlXG59XG5cbi8qKlxuICogQGZ1bmN0aW9uIGlzTnVsbFxuICogQGRlc2NyaXB0aW9uIGNoZWNrIGlmIGFsbCBhcmdzIGFyZSBudWxsXG4gKlxuICogQHBhcmFtIHt1bmtub3duW119IHZhbHVlcyAtIGFueSBhcmd1bWVudHMgdG8gY2hlY2tzXG4gKiBAcmV0dXJuIHtib29sZWFufVxuICpcbiAqIEBleGFtcGxlXG4gKiBpc051bGwoeCwgeSwgeiwgcHJvY2Vzcy5lbnYuUE9SVClcbiAqXG4gKi9cbmV4cG9ydCBjb25zdCBpc051bGwgPSAoLi4udmFsdWVzOiB1bmtub3duW10pOiBib29sZWFuID0+ICFpc05vdE51bGwoLi4udmFsdWVzKVxuXG5cblxuLyoqXG4gKiBAZnVuY3Rpb24gZGlzcGxheVxuICogQGRlc2NyaXB0aW9uIGRpc3BsYXkgb24gb3V0cHV0IHdpdGggdGltZVxuICpcbiAqIEBwYXJhbSB7c3RyaW5nfSBzdHIgLSBkYXRhIHRvIGRpc3BsYXlcbiAqIEByZXR1cm4ge3ZvaWR9XG4gKlxuICogQGV4YW1wbGVcbiAqIGRpc3BsYXkoXCJJbCBhIHBhcyBkaXQgYm9uam91clwiKVxuICpcbiAqL1xuZXhwb3J0IGNvbnN0IGRpc3BsYXkgPSAoc3RyOiBzdHJpbmcpOiB2b2lkID0+IGNvbnNvbGUubG9nKGBbJHttb21lbnQoKX1dICR7c3RyfWApXG5cblxuLyoqXG4gKiBAZnVuY3Rpb24gZ2V0RW52XG4gKiBAZGVzY3JpcHRpb24gcmV0dXJuIGVudlxuICpcbiAqIEBwYXJhbSB7c3RyaW5nfSB2YWx1ZXMgLSBhbnkgYXJndW1lbnRzIHRvIGNoZWNrc1xuICogQHJldHVybiB7c3RyaW5nfVxuICpcbiAqIEBleGFtcGxlXG4gKiBnZXRFbnYoXCJQT1JUXCIpXG4gKlxuICovXG5leHBvcnQgY29uc3QgZ2V0RW52ID0gKGtleTogc3RyaW5nKTogc3RyaW5nID0+IHtcbiAgaWYocHJvY2Vzcy5lbnYuaGFzT3duUHJvcGVydHkoa2V5KSkgcmV0dXJuIHByb2Nlc3MuZW52W2tleV1cbiAgcmV0dXJuIG51bGw7XG59XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "utils.ts"
      ],
      "names": [
        "isNotNull",
        "values",
        "v",
        "undefined",
        "isNull",
        "display",
        "str",
        "console",
        "log",
        "getEnv",
        "key",
        "process",
        "env",
        "hasOwnProperty"
      ],
      "mappings": ";;;;;;;AAAA;;;;AAEA;;;;;;;;;;;AAWO,IAAMA,SAAS,GAAG,SAAZA,SAAY,GAAmC;AAAA,oCAA/BC,MAA+B;AAA/BA,IAAAA,MAA+B;AAAA;;AAC1D,6BAAgBA,MAAhB,6BAAwB;AAAnB,QAAMC,CAAC,cAAP;;AACH,QAAIA,CAAC,KAAKC,SAAN,IAAmBD,CAAC,KAAK,IAA7B,EAAmC;AACjC,aAAO,KAAP;AACD;AACF;;AACD,SAAO,IAAP;AACD,CAPM;AASP;;;;;;;;;;;;;;;AAWO,IAAME,MAAM,GAAG,SAATA,MAAS;AAAA,SAAmC,CAACJ,SAAS,MAAT,mBAApC;AAAA,CAAf;AAIP;;;;;;;;;;;;;;;AAWO,IAAMK,OAAO,GAAG,SAAVA,OAAU,CAACC,GAAD;AAAA,SAAuBC,OAAO,CAACC,GAAR,YAAgB,yBAAhB,eAA6BF,GAA7B,EAAvB;AAAA,CAAhB;AAGP;;;;;;;;;;;;;;;AAWO,IAAMG,MAAM,GAAG,SAATA,MAAS,CAACC,GAAD,EAAyB;AAC7C,MAAGC,OAAO,CAACC,GAAR,CAAYC,cAAZ,CAA2BH,GAA3B,CAAH,EAAoC,OAAOC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAAP;AACpC,SAAO,IAAP;AACD,CAHM",
      "sourceRoot": "/mnt/c/Users/Rachid/Desktop/cross-pwgame/back/src/helpers/",
      "sourcesContent": [
        "import moment from 'moment'\n\n/**\n * @function isNotNull\n * @description check if all args are not null\n *\n * @param {unknown[]} values - any arguments to checks\n * @return {boolean}\n *\n * @example\n * isNotNull(x, y, z, process.env.PORT)\n *\n */\nexport const isNotNull = (...values: unknown[]): boolean => {\n  for (const v of values) {\n    if (v === undefined || v === null) {\n      return false\n    }\n  }\n  return true\n}\n\n/**\n * @function isNull\n * @description check if all args are null\n *\n * @param {unknown[]} values - any arguments to checks\n * @return {boolean}\n *\n * @example\n * isNull(x, y, z, process.env.PORT)\n *\n */\nexport const isNull = (...values: unknown[]): boolean => !isNotNull(...values)\n\n\n\n/**\n * @function display\n * @description display on output with time\n *\n * @param {string} str - data to display\n * @return {void}\n *\n * @example\n * display(\"Il a pas dit bonjour\")\n *\n */\nexport const display = (str: string): void => console.log(`[${moment()}] ${str}`)\n\n\n/**\n * @function getEnv\n * @description return env\n *\n * @param {string} values - any arguments to checks\n * @return {string}\n *\n * @example\n * getEnv(\"PORT\")\n *\n */\nexport const getEnv = (key: string): string => {\n  if(process.env.hasOwnProperty(key)) return process.env[key]\n  return null;\n}\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1599214508985
  },
  "{\"sourceRoot\":\"/mnt/c/Users/Rachid/Desktop/cross-pwgame/back/src/server/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/mnt/c/Users/Rachid/Desktop/cross-pwgame/back\",\"filename\":\"/mnt/c/Users/Rachid/Desktop/cross-pwgame/back/src/server/index.ts\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/mnt/c/Users/Rachid/Desktop/cross-pwgame/back\",\"plugins\":[{\"key\":\"transform-typescript\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Identifier\":{\"enter\":[null]},\"RestElement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"ExportSpecifier\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"TSDeclareFunction\":{\"enter\":[null]},\"TSDeclareMethod\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"VariableDeclarator\":{\"enter\":[null]},\"TSIndexSignature\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null,null]},\"TSModuleDeclaration\":{\"enter\":[null]},\"TSInterfaceDeclaration\":{\"enter\":[null]},\"TSTypeAliasDeclaration\":{\"enter\":[null]},\"TSEnumDeclaration\":{\"enter\":[null]},\"TSImportEqualsDeclaration\":{\"enter\":[null]},\"TSExportAssignment\":{\"enter\":[null]},\"TSTypeAssertion\":{\"enter\":[null]},\"TSAsExpression\":{\"enter\":[null]},\"TSNonNullExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"OptionalCallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"JSXOpeningElement\":{\"enter\":[null]},\"TaggedTemplateExpression\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"isTSX\":false}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.11.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "/mnt/c/Users/Rachid/Desktop/cross-pwgame/back/src/server/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/mnt/c/Users/Rachid/Desktop/cross-pwgame/back",
      "filename": "/mnt/c/Users/Rachid/Desktop/cross-pwgame/back/src/server/index.ts",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/mnt/c/Users/Rachid/Desktop/cross-pwgame/back",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-typescript",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Identifier": {
              "enter": [
                null
              ]
            },
            "RestElement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "ExportSpecifier": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "TSDeclareFunction": {
              "enter": [
                null
              ]
            },
            "TSDeclareMethod": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "TSIndexSignature": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null,
                null
              ]
            },
            "TSModuleDeclaration": {
              "enter": [
                null
              ]
            },
            "TSInterfaceDeclaration": {
              "enter": [
                null
              ]
            },
            "TSTypeAliasDeclaration": {
              "enter": [
                null
              ]
            },
            "TSEnumDeclaration": {
              "enter": [
                null
              ]
            },
            "TSImportEqualsDeclaration": {
              "enter": [
                null
              ]
            },
            "TSExportAssignment": {
              "enter": [
                null
              ]
            },
            "TSTypeAssertion": {
              "enter": [
                null
              ]
            },
            "TSAsExpression": {
              "enter": [
                null
              ]
            },
            "TSNonNullExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "JSXOpeningElement": {
              "enter": [
                null
              ]
            },
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "isTSX": false
          }
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/mnt/c/Users/Rachid/Desktop/cross-pwgame/back/src/server/index.ts",
        "plugins": [
          "typescript",
          "classProperties",
          "objectRestSpread",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/mnt/c/Users/Rachid/Desktop/cross-pwgame/back/src/server/index.ts",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/mnt/c/Users/Rachid/Desktop/cross-pwgame/back/src/server/",
        "sourceFileName": "index.ts"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _dotenv = _interopRequireDefault(require(\"dotenv\"));\n\nvar _chalk = _interopRequireDefault(require(\"chalk\"));\n\nvar _fs = _interopRequireDefault(require(\"fs\"));\n\nvar _socket = _interopRequireDefault(require(\"socket.io\"));\n\nvar _utils = require(\"../helpers/utils\");\n\nvar _game = _interopRequireDefault(require(\"../db/game.json\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar LOCAL_DATABASE = '../db/game.json';\n\n// prelude -- loading environment variable\n_dotenv[\"default\"].config();\n\nvar port = parseInt((0, _utils.getEnv)(\"PORT\")) || 8080;\nvar app = (0, _express[\"default\"])();\nvar server = app.listen(port, function () {\n  (0, _utils.display)(_chalk[\"default\"].magenta(\"crossPWAGame server is running on 0.0.0.0:\".concat(port)));\n});\nvar socketio = (0, _socket[\"default\"])(server);\nvar users = {};\nvar i = 1;\nvar countParticipant = 0;\nvar randomNumber = 0;\nvar score;\nvar game = _game[\"default\"];\nvar magicNumber = game.magicNumber || [];\n\nfunction setRandomNumber() {\n  randomNumber = Math.floor(Math.random() * 1338);\n}\n\nfunction initScore(players) {\n  score = {\n    beg: new Date().toISOString(),\n    end: new Date().toISOString(),\n    players: players\n  };\n  magicNumber.push(score);\n}\n\nfunction getNewScore(score, winner) {\n  var players = score.players;\n  var indexPlayer = players.findIndex(function (player) {\n    return player.name === winner;\n  });\n  players[indexPlayer] = _objectSpread(_objectSpread({}, players[indexPlayer]), {}, {\n    points: players[indexPlayer].points + 1\n  });\n  return _objectSpread(_objectSpread({}, score), {}, {\n    players: players\n  });\n}\n\nfunction getIndexScore(players) {\n  return magicNumber.findIndex(function (score) {\n    for (var _i = 0; _i < players.length; _i++) {\n      if (players[_i] !== score.players[_i].name) return false;else if (score.players[_i].points === 3) return false;\n    }\n\n    return true;\n  });\n}\n\nsocketio.on('connection', function (socket) {\n  socket.join(\"room_\".concat(i));\n  (0, _utils.display)(_chalk[\"default\"].cyan(\"Connection opened for ( \".concat(socket.id, \" )\")));\n  socket.on('disconnect', function () {\n    var _users$socket$id;\n\n    if ((_users$socket$id = users[socket.id]) === null || _users$socket$id === void 0 ? void 0 : _users$socket$id.nickname) {\n      var nickname = users[socket.id].nickname;\n      (0, _utils.display)(_chalk[\"default\"].yellow(\"Goodbye \".concat(nickname)));\n      countParticipant--;\n      delete users[socket.id];\n    }\n\n    socket.broadcast.emit('game::checkRoomCount', {\n      isNotFull: Object.keys(users).length < 2\n    });\n    (0, _utils.display)(_chalk[\"default\"].cyan(\"Connection closed for ( \".concat(socket.id, \" )\")));\n  });\n  socket.on('game::sendNickname', function (payload) {\n    var _JSON$parse = JSON.parse(payload),\n        nickname = _JSON$parse.nickname;\n\n    (0, _utils.display)(_chalk[\"default\"].yellow(\"Here comes a new challenger : \".concat(nickname, \" ( from \").concat(socket.id, \" )\")));\n    users[socket.id] = {\n      nickname: nickname\n    };\n    countParticipant++;\n\n    if (countParticipant == 2) {\n      setRandomNumber();\n      var players = Object.values(users).map(function (user) {\n        return {\n          \"name\": user.nickname,\n          \"points\": 0\n        };\n      });\n      initScore(players);\n    }\n  });\n  socket.on('game::validation', function () {\n    socket.broadcast.emit('game::checkRoomCount', {\n      isNotFull: Object.keys(users).length < 2\n    });\n  });\n  socket.on('game::magicNumber::start', function () {\n    socket.broadcast.emit('game::magicNumber::data', {\n      number: randomNumber,\n      players: users,\n      id: socket.id,\n      turn: 0\n    });\n  });\n  socket.on('game::magicNumber::checkNumber', function (playload) {\n    var _JSON$parse2 = JSON.parse(playload),\n        number = _JSON$parse2.number;\n\n    socket.emit('game::magicNumber::numberChecked', {\n      isRightNumber: number == randomNumber,\n      rightNumber: randomNumber\n    });\n  });\n  socket.on('game::magicNumber::win', function (payload) {\n    var _JSON$parse3 = JSON.parse(payload),\n        players = _JSON$parse3.players,\n        winner = _JSON$parse3.winner;\n\n    var indexScore = getIndexScore(players);\n    setRandomNumber();\n    console.log(indexScore, magicNumber, players);\n\n    if (indexScore >= 0) {\n      magicNumber[indexScore] = getNewScore(magicNumber[indexScore], winner);\n      game = _objectSpread(_objectSpread({}, game), {}, {\n        magicNumber: magicNumber\n      });\n      socketio.emit('game::magicNumber::displayWinner', {\n        winner: winner,\n        players: magicNumber[indexScore].players\n      });\n\n      if (_fs[\"default\"].existsSync(\"\".concat(__dirname, \"/\").concat(LOCAL_DATABASE))) {\n        _fs[\"default\"].writeFileSync(\"\".concat(__dirname, \"/\").concat(LOCAL_DATABASE), JSON.stringify(game, null, 4));\n      }\n\n      socketio.emit('game::magicNumber::data', {\n        number: randomNumber,\n        turn: 0\n      });\n    }\n  });\n  socket.on('game::magicNumber::updateTurn', function (payload) {\n    var _JSON$parse4 = JSON.parse(payload),\n        id = _JSON$parse4.id;\n\n    socket.broadcast.emit('game::magicNumber::newTurn', {\n      turn: Object.keys(users).findIndex(function (key) {\n        return key !== id;\n      })\n    });\n  });\n  socket.on('game::QuickWord::start', function () {\n    socket.emit('game::QuickWord::data', {\n      isNotFull: countParticipant < 2\n    });\n  });\n  socket.on('game::WordAndFurious::start', function () {\n    socket.emit('game::WordAndFurious::data', {\n      isNotFull: countParticipant < 2\n    });\n  });\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "index.ts"
      ],
      "names": [
        "LOCAL_DATABASE",
        "dotenv",
        "config",
        "port",
        "parseInt",
        "app",
        "server",
        "listen",
        "chalk",
        "magenta",
        "socketio",
        "users",
        "i",
        "countParticipant",
        "randomNumber",
        "score",
        "game",
        "gameJson",
        "magicNumber",
        "setRandomNumber",
        "Math",
        "floor",
        "random",
        "initScore",
        "players",
        "beg",
        "Date",
        "toISOString",
        "end",
        "push",
        "getNewScore",
        "winner",
        "indexPlayer",
        "findIndex",
        "player",
        "name",
        "points",
        "getIndexScore",
        "length",
        "on",
        "socket",
        "join",
        "cyan",
        "id",
        "nickname",
        "yellow",
        "broadcast",
        "emit",
        "isNotFull",
        "Object",
        "keys",
        "payload",
        "JSON",
        "parse",
        "values",
        "map",
        "user",
        "number",
        "turn",
        "playload",
        "isRightNumber",
        "rightNumber",
        "indexScore",
        "console",
        "log",
        "fs",
        "existsSync",
        "__dirname",
        "writeFileSync",
        "stringify",
        "key"
      ],
      "mappings": ";;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;;;;;;;AAEA,IAAMA,cAAc,GAAG,iBAAvB;;AAoBA;AACAC,mBAAOC,MAAP;;AAEA,IAAMC,IAAI,GAAGC,QAAQ,CAAC,mBAAO,MAAP,CAAD,CAAR,IAA4B,IAAzC;AACA,IAAMC,GAAG,GAAG,0BAAZ;AAEA,IAAMC,MAAM,GAAGD,GAAG,CAACE,MAAJ,CAAWJ,IAAX,EAAiB,YAAM;AACpC,sBAAQK,kBAAMC,OAAN,qDAA2DN,IAA3D,EAAR;AACD,CAFc,CAAf;AAIA,IAAMO,QAAQ,GAAG,wBAAGJ,MAAH,CAAjB;AAEA,IAAMK,KAA2B,GAAG,EAApC;AACA,IAAIC,CAAS,GAAG,CAAhB;AACA,IAAIC,gBAAwB,GAAG,CAA/B;AACA,IAAIC,YAAoB,GAAG,CAA3B;AACA,IAAIC,KAAJ;AACA,IAAIC,IAAU,GAAGC,gBAAjB;AACA,IAAIC,WAAyB,GAAGF,IAAI,CAACE,WAAL,IAAoB,EAApD;;AAEA,SAASC,eAAT,GAA2B;AACzBL,EAAAA,YAAY,GAAGM,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,IAA3B,CAAf;AACD;;AAED,SAASC,SAAT,CAAmBC,OAAnB,EAAsC;AACpCT,EAAAA,KAAK,GAAG;AACNU,IAAAA,GAAG,EAAE,IAAIC,IAAJ,GAAWC,WAAX,EADC;AAENC,IAAAA,GAAG,EAAE,IAAIF,IAAJ,GAAWC,WAAX,EAFC;AAGNH,IAAAA,OAAO,EAAPA;AAHM,GAAR;AAKAN,EAAAA,WAAW,CAACW,IAAZ,CAAiBd,KAAjB;AACD;;AAED,SAASe,WAAT,CAAqBf,KAArB,EAAoCgB,MAApC,EAA4D;AAAA,MACpDP,OADoD,GACnBT,KADmB,CACpDS,OADoD;AAE1D,MAAMQ,WAAW,GAAGR,OAAO,CAACS,SAAR,CAAkB,UAAAC,MAAM;AAAA,WAAIA,MAAM,CAACC,IAAP,KAAgBJ,MAApB;AAAA,GAAxB,CAApB;AACAP,EAAAA,OAAO,CAACQ,WAAD,CAAP,mCACKR,OAAO,CAACQ,WAAD,CADZ;AAEEI,IAAAA,MAAM,EAAEZ,OAAO,CAACQ,WAAD,CAAP,CAAqBI,MAArB,GAA8B;AAFxC;AAIA,yCACKrB,KADL;AAEES,IAAAA,OAAO,EAAPA;AAFF;AAID;;AAED,SAASa,aAAT,CAAuBb,OAAvB,EAAmD;AACjD,SAAON,WAAW,CAACe,SAAZ,CAAsB,UAAClB,KAAD,EAAkB;AAC7C,SAAK,IAAIH,EAAC,GAAG,CAAb,EAAgBA,EAAC,GAAGY,OAAO,CAACc,MAA5B,EAAoC1B,EAAC,EAArC,EAAyC;AACvC,UAAGY,OAAO,CAACZ,EAAD,CAAP,KAAeG,KAAK,CAACS,OAAN,CAAcZ,EAAd,EAAiBuB,IAAnC,EAAyC,OAAO,KAAP,CAAzC,KACK,IAAGpB,KAAK,CAACS,OAAN,CAAcZ,EAAd,EAAiBwB,MAAjB,KAA4B,CAA/B,EAAkC,OAAO,KAAP;AAExC;;AACD,WAAO,IAAP;AACD,GAPM,CAAP;AAQD;;AAED1B,QAAQ,CAAC6B,EAAT,CAAY,YAAZ,EAA0B,UAACC,MAAD,EAAoB;AAC5CA,EAAAA,MAAM,CAACC,IAAP,gBAAoB7B,CAApB;AAEA,sBAAQJ,kBAAMkC,IAAN,mCAAsCF,MAAM,CAACG,EAA7C,QAAR;AACAH,EAAAA,MAAM,CAACD,EAAP,CAAU,YAAV,EAAwB,YAAM;AAAA;;AAC5B,4BAAI5B,KAAK,CAAC6B,MAAM,CAACG,EAAR,CAAT,qDAAI,iBAAkBC,QAAtB,EAAgC;AAAA,UACtBA,QADsB,GACTjC,KAAK,CAAC6B,MAAM,CAACG,EAAR,CADI,CACtBC,QADsB;AAE9B,0BAAQpC,kBAAMqC,MAAN,mBAAwBD,QAAxB,EAAR;AACA/B,MAAAA,gBAAgB;AAChB,aAAOF,KAAK,CAAC6B,MAAM,CAACG,EAAR,CAAZ;AACD;;AACDH,IAAAA,MAAM,CAACM,SAAP,CAAiBC,IAAjB,CAAsB,sBAAtB,EAA8C;AAC5CC,MAAAA,SAAS,EAAEC,MAAM,CAACC,IAAP,CAAYvC,KAAZ,EAAmB2B,MAAnB,GAA4B;AADK,KAA9C;AAGA,wBAAQ9B,kBAAMkC,IAAN,mCAAsCF,MAAM,CAACG,EAA7C,QAAR;AACD,GAXD;AAcAH,EAAAA,MAAM,CAACD,EAAP,CAAU,oBAAV,EAAgC,UAAAY,OAAO,EAAI;AAAA,sBACpBC,IAAI,CAACC,KAAL,CAAWF,OAAX,CADoB;AAAA,QACjCP,QADiC,eACjCA,QADiC;;AAEzC,wBAAQpC,kBAAMqC,MAAN,yCAA8CD,QAA9C,qBAAiEJ,MAAM,CAACG,EAAxE,QAAR;AACAhC,IAAAA,KAAK,CAAC6B,MAAM,CAACG,EAAR,CAAL,GAAmB;AAAEC,MAAAA,QAAQ,EAARA;AAAF,KAAnB;AACA/B,IAAAA,gBAAgB;;AAChB,QAAIA,gBAAgB,IAAI,CAAxB,EAA2B;AACzBM,MAAAA,eAAe;AACf,UAAMK,OAAiB,GAAGyB,MAAM,CAACK,MAAP,CAAc3C,KAAd,EAAqB4C,GAArB,CAAyB,UAAAC,IAAI,EAAI;AACzD,eAAO;AAAC,kBAAQA,IAAI,CAACZ,QAAd;AAAwB,oBAAU;AAAlC,SAAP;AACD,OAFyB,CAA1B;AAIArB,MAAAA,SAAS,CAACC,OAAD,CAAT;AACD;AACF,GAbD;AAeAgB,EAAAA,MAAM,CAACD,EAAP,CAAU,kBAAV,EAA8B,YAAM;AAClCC,IAAAA,MAAM,CAACM,SAAP,CAAiBC,IAAjB,CAAsB,sBAAtB,EAA8C;AAC5CC,MAAAA,SAAS,EAAEC,MAAM,CAACC,IAAP,CAAYvC,KAAZ,EAAmB2B,MAAnB,GAA4B;AADK,KAA9C;AAID,GALD;AAOAE,EAAAA,MAAM,CAACD,EAAP,CAAU,0BAAV,EAAsC,YAAM;AAC1CC,IAAAA,MAAM,CAACM,SAAP,CAAiBC,IAAjB,CAAsB,yBAAtB,EAAiD;AAC/CU,MAAAA,MAAM,EAAE3C,YADuC;AAE/CU,MAAAA,OAAO,EAAEb,KAFsC;AAG/CgC,MAAAA,EAAE,EAAEH,MAAM,CAACG,EAHoC;AAI/Ce,MAAAA,IAAI,EAAE;AAJyC,KAAjD;AAMD,GAPD;AASAlB,EAAAA,MAAM,CAACD,EAAP,CAAU,gCAAV,EAA4C,UAACoB,QAAD,EAAc;AAAA,uBACrCP,IAAI,CAACC,KAAL,CAAWM,QAAX,CADqC;AAAA,QAChDF,MADgD,gBAChDA,MADgD;;AAExDjB,IAAAA,MAAM,CAACO,IAAP,CAAY,kCAAZ,EAAgD;AAC9Ca,MAAAA,aAAa,EAAEH,MAAM,IAAI3C,YADqB;AAE9C+C,MAAAA,WAAW,EAAE/C;AAFiC,KAAhD;AAID,GAND;AAQA0B,EAAAA,MAAM,CAACD,EAAP,CAAU,wBAAV,EAAoC,UAACY,OAAD,EAAa;AAAA,uBACnBC,IAAI,CAACC,KAAL,CAAWF,OAAX,CADmB;AAAA,QACvC3B,OADuC,gBACvCA,OADuC;AAAA,QAC9BO,MAD8B,gBAC9BA,MAD8B;;AAE/C,QAAM+B,UAAU,GAAGzB,aAAa,CAACb,OAAD,CAAhC;AACAL,IAAAA,eAAe;AACf4C,IAAAA,OAAO,CAACC,GAAR,CAAYF,UAAZ,EAAwB5C,WAAxB,EAAqCM,OAArC;;AACA,QAAIsC,UAAU,IAAI,CAAlB,EAAqB;AACnB5C,MAAAA,WAAW,CAAC4C,UAAD,CAAX,GAA0BhC,WAAW,CAACZ,WAAW,CAAC4C,UAAD,CAAZ,EAA0B/B,MAA1B,CAArC;AACAf,MAAAA,IAAI,mCACCA,IADD;AAEFE,QAAAA,WAAW,EAAXA;AAFE,QAAJ;AAKAR,MAAAA,QAAQ,CAACqC,IAAT,CAAc,kCAAd,EAAkD;AAChDhB,QAAAA,MAAM,EAANA,MADgD;AAEhDP,QAAAA,OAAO,EAAEN,WAAW,CAAC4C,UAAD,CAAX,CAAwBtC;AAFe,OAAlD;;AAIA,UAAIyC,eAAGC,UAAH,WAAiBC,SAAjB,cAA8BnE,cAA9B,EAAJ,EAAqD;AACnDiE,uBAAGG,aAAH,WAAoBD,SAApB,cAAiCnE,cAAjC,GAAmDoD,IAAI,CAACiB,SAAL,CAAerD,IAAf,EAAqB,IAArB,EAA2B,CAA3B,CAAnD;AACD;;AACDN,MAAAA,QAAQ,CAACqC,IAAT,CAAc,yBAAd,EAAyC;AACvCU,QAAAA,MAAM,EAAE3C,YAD+B;AAEvC4C,QAAAA,IAAI,EAAE;AAFiC,OAAzC;AAID;AACF,GAxBD;AA0BAlB,EAAAA,MAAM,CAACD,EAAP,CAAU,+BAAV,EAA2C,UAAAY,OAAO,EAAI;AAAA,uBACrCC,IAAI,CAACC,KAAL,CAAWF,OAAX,CADqC;AAAA,QAC5CR,EAD4C,gBAC5CA,EAD4C;;AAEpDH,IAAAA,MAAM,CAACM,SAAP,CAAiBC,IAAjB,CAAsB,4BAAtB,EAAoD;AAClDW,MAAAA,IAAI,EAAET,MAAM,CAACC,IAAP,CAAYvC,KAAZ,EAAmBsB,SAAnB,CAA6B,UAAAqC,GAAG;AAAA,eAAIA,GAAG,KAAK3B,EAAZ;AAAA,OAAhC;AAD4C,KAApD;AAGD,GALD;AAOAH,EAAAA,MAAM,CAACD,EAAP,CAAU,wBAAV,EAAoC,YAAM;AACxCC,IAAAA,MAAM,CAACO,IAAP,CAAY,uBAAZ,EAAqC;AACnCC,MAAAA,SAAS,EAAEnC,gBAAgB,GAAG;AADK,KAArC;AAGD,GAJD;AAMA2B,EAAAA,MAAM,CAACD,EAAP,CAAU,6BAAV,EAAyC,YAAM;AAC7CC,IAAAA,MAAM,CAACO,IAAP,CAAY,4BAAZ,EAA0C;AACxCC,MAAAA,SAAS,EAAEnC,gBAAgB,GAAG;AADU,KAA1C;AAGD,GAJD;AAMD,CAtGD",
      "sourceRoot": "/mnt/c/Users/Rachid/Desktop/cross-pwgame/back/src/server/",
      "sourcesContent": [
        "import express from 'express'\nimport dotenv from 'dotenv'\nimport chalk from 'chalk'\nimport fs from 'fs'\nimport io, { Socket } from 'socket.io'\nimport { isNull, display, getEnv } from '../helpers/utils'\nimport gameJson from  '../db/game.json'\n\nconst LOCAL_DATABASE = '../db/game.json';\ninterface User {\n  nickname?: string\n}\n\ninterface Player {\n  name?: string\n  points?: number\n}\n\ninterface Score {\n  beg?: string,\n  end?: string,\n  players: Player[]\n}\n\ninterface Game {\n  magicNumber?: Score[],\n}\n\n// prelude -- loading environment variable\ndotenv.config()\n\nconst port = parseInt(getEnv(\"PORT\")) || 8080\nconst app = express()\n\nconst server = app.listen(port, () => {\n  display(chalk.magenta(`crossPWAGame server is running on 0.0.0.0:${port}`))\n})\n\nconst socketio = io(server)\n\nconst users: Record<string, User> = {}\nlet i: number = 1;\nlet countParticipant: number = 0;\nlet randomNumber: number = 0;\nlet score: Score;\nlet game: Game = gameJson ;\nlet magicNumber: Array<Score> = game.magicNumber || []\n\nfunction setRandomNumber() {\n  randomNumber = Math.floor(Math.random() * 1338)\n}\n\nfunction initScore(players: Player[]) {\n  score = {\n    beg: new Date().toISOString(),\n    end: new Date().toISOString(),\n    players\n  }\n  magicNumber.push(score);\n}\n\nfunction getNewScore(score: Score,  winner: string) : Score {\n  let { players }: {players: Player[]} = score\n  const indexPlayer = players.findIndex(player => player.name === winner)\n  players[indexPlayer] = {\n    ...players[indexPlayer],\n    points: players[indexPlayer].points + 1\n  }\n  return {\n    ...score,\n    players\n  };\n}\n\nfunction getIndexScore(players: Player[]) : number {\n  return magicNumber.findIndex((score: Score) => {\n    for (let i = 0; i < players.length; i++) {\n      if(players[i] !== score.players[i].name) return false\n      else if(score.players[i].points === 3) return false;\n      \n    }\n    return true\n  })\n}\n\nsocketio.on('connection', (socket: Socket) => {\n  socket.join(`room_${i}`);\n\n  display(chalk.cyan(`Connection opened for ( ${socket.id} )`))\n  socket.on('disconnect', () => {\n    if (users[socket.id]?.nickname) {\n      const { nickname } = users[socket.id]\n      display(chalk.yellow(`Goodbye ${nickname}`))\n      countParticipant--;\n      delete users[socket.id]\n    }\n    socket.broadcast.emit('game::checkRoomCount', {\n      isNotFull: Object.keys(users).length < 2,\n    })\n    display(chalk.cyan(`Connection closed for ( ${socket.id} )`))\n  })\n\n  \n  socket.on('game::sendNickname', payload => {\n    const { nickname } = JSON.parse(payload)\n    display(chalk.yellow(`Here comes a new challenger : ${nickname} ( from ${socket.id} )`))\n    users[socket.id] = { nickname }\n    countParticipant++;\n    if (countParticipant == 2) {\n      setRandomNumber()\n      const players: Player[] = Object.values(users).map(user => {\n        return {\"name\": user.nickname, \"points\": 0}\n      })\n     \n      initScore(players)\n    }\n  })\n\n  socket.on('game::validation', () => {\n    socket.broadcast.emit('game::checkRoomCount', {\n      isNotFull: Object.keys(users).length < 2,\n    })\n\n  })\n\n  socket.on('game::magicNumber::start', () => {\n    socket.broadcast.emit('game::magicNumber::data', {\n      number: randomNumber,\n      players: users,\n      id: socket.id,\n      turn: 0\n    })\n  })\n\n  socket.on('game::magicNumber::checkNumber', (playload) => {\n    const { number } = JSON.parse(playload)\n    socket.emit('game::magicNumber::numberChecked', {\n      isRightNumber: number == randomNumber,\n      rightNumber: randomNumber\n    })\n  })\n\n  socket.on('game::magicNumber::win', (payload) => {\n    const { players, winner } = JSON.parse(payload)\n    const indexScore = getIndexScore(players);\n    setRandomNumber()\n    console.log(indexScore, magicNumber, players)\n    if (indexScore >= 0) {\n      magicNumber[indexScore] = getNewScore(magicNumber[indexScore], winner);\n      game = {\n        ...game,\n        magicNumber\n      }\n\n      socketio.emit('game::magicNumber::displayWinner', {\n        winner,\n        players: magicNumber[indexScore].players\n      })\n      if (fs.existsSync(`${__dirname}/${LOCAL_DATABASE}`)) {\n        fs.writeFileSync(`${__dirname}/${LOCAL_DATABASE}`, JSON.stringify(game, null, 4))\n      }\n      socketio.emit('game::magicNumber::data', {\n        number: randomNumber,\n        turn: 0\n      })\n    }\n  })\n\n  socket.on('game::magicNumber::updateTurn', payload => {\n    const { id } = JSON.parse(payload)\n    socket.broadcast.emit('game::magicNumber::newTurn', {\n      turn: Object.keys(users).findIndex(key => key !== id)\n    })\n  })\n\n  socket.on('game::QuickWord::start', () => {\n    socket.emit('game::QuickWord::data', {\n      isNotFull: countParticipant < 2,\n    })\n  })\n\n  socket.on('game::WordAndFurious::start', () => {\n    socket.emit('game::WordAndFurious::data', {\n      isNotFull: countParticipant < 2,\n    })\n  })\n\n})\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1599840969218
  }
}